{"version":3,"sources":["components/Number/Number.js","components/Game.js","App.js","index.js"],"names":["Number","handleClick","props","clickable","onClick","id","className","style","opacity","this","value","React","PureComponent","Game","state","gameStatus","remainingSeconds","initialSeconds","selectedIds","randomNumberBetween","min","max","Math","floor","random","challengeNumbers","Array","from","length","challengeSize","map","challengeRange","_","require","target","sampleSize","reduce","acc","curr","startGame","setState","intervalId","setInterval","prevState","newRemainingSeconds","clearInterval","isNumberAvailable","numberIndex","indexOf","selectNumber","calcGameStatus","sumSelected","autoPlay","backgroundColor","bgColors","index","Row","Col","xs","md","lg","includes","width","transform","onPlayAgain","Component","playing","won","lost","App","gameId","resetGame","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff432e79.chunk.js","sourcesContent":["// Final Game\r\nimport React from 'react';\r\nimport './styles.css'\r\n\r\nclass Number extends React.PureComponent {\r\n  handleClick = () => {\r\n    if (this.props.clickable) {\r\n      this.props.onClick(this.props.id);\r\n    }\r\n  };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"number\"\r\n        style={{ opacity: this.props.clickable ? 1 : 0.3 }}\r\n        onClick={this.handleClick}\r\n      >\r\n        {this.props.value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Number;\r\n\r\n","import React from 'react';\r\nimport Number from './Number/Number';\r\nimport './styles.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nclass Game extends React.Component {\r\n\tstatic bgColors = {\r\n\t\tplaying: '#ccc',\r\n\t\twon: 'green',\r\n\t\tlost: 'red'\r\n\t};\r\n\r\n\tstate = {\r\n\t\tgameStatus: 'new',\r\n\t\tremainingSeconds: this.props.initialSeconds,\r\n\t\tselectedIds: []\r\n\t};\r\n\trandomNumberBetween = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n\tchallengeNumbers = Array.from({ length: this.props.challengeSize }).map(() =>\r\n\t\tthis.randomNumberBetween(...this.props.challengeRange)\r\n\t);\r\n\t_ = require('lodash');\r\n\ttarget = this._\r\n\t\t.sampleSize(this.challengeNumbers, this.props.challengeSize - 2)\r\n\t\t.reduce((acc, curr) => acc + curr, 0);\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.autoPlay) {\r\n\t\t\tthis.startGame();\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.intervalId);\r\n\t}\r\n\r\n\tstartGame = () => {\r\n\t\tthis.setState({ gameStatus: 'playing' }, () => {\r\n\t\t\tthis.intervalId = setInterval(() => {\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\tconst newRemainingSeconds = prevState.remainingSeconds - 1;\r\n\t\t\t\t\tif (newRemainingSeconds === 0) {\r\n\t\t\t\t\t\tclearInterval(this.intervalId);\r\n\t\t\t\t\t\treturn { gameStatus: 'lost', remainingSeconds: 0 };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn { remainingSeconds: newRemainingSeconds };\r\n\t\t\t\t});\r\n\t\t\t}, 1000);\r\n\t\t});\r\n\t};\r\n\r\n\tisNumberAvailable = (numberIndex) => this.state.selectedIds.indexOf(numberIndex) === -1;\r\n\r\n\tselectNumber = (numberIndex) => {\r\n\t\tif (this.state.gameStatus !== 'playing') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState(\r\n\t\t\t(prevState) => ({\r\n\t\t\t\tselectedIds: [ ...prevState.selectedIds, numberIndex ],\r\n\t\t\t\tgameStatus: this.calcGameStatus([ ...prevState.selectedIds, numberIndex ])\r\n\t\t\t}),\r\n\t\t\t() => {\r\n\t\t\t\tif (this.state.gameStatus !== 'playing') {\r\n\t\t\t\t\tclearInterval(this.intervalId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tcalcGameStatus = (selectedIds) => {\r\n\t\tconst sumSelected = selectedIds.reduce((acc, curr) => acc + this.challengeNumbers[curr], 0);\r\n\t\tif (sumSelected < this.target) {\r\n\t\t\treturn 'playing';\r\n\t\t}\r\n\t\treturn sumSelected === this.target ? 'won' : 'lost';\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { gameStatus, remainingSeconds } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"target\" style={{ backgroundColor: Game.bgColors[gameStatus] }}>\r\n\t\t\t\t\t{gameStatus === 'new' ? '?' : this.target}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"challenge-numbers\">\r\n\t\t\t\t\t{this.challengeNumbers.map((value, index) => (\r\n\t\t\t\t\t\t<Number\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\tvalue={gameStatus === 'new' ? '?' : value}\r\n\t\t\t\t\t\t\tclickable={this.isNumberAvailable(index)}\r\n\t\t\t\t\t\t\tonClick={this.selectNumber}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"footer\">\r\n          <Row>\r\n\t\t\t\t\t{gameStatus === 'new' ? (\r\n\t\t\t\t\t\t<button onClick={this.startGame}>Start</button>\r\n\t\t\t\t\t) : (\r\n            <Col xs={2} md={2} lg={2}>\r\n\t\t\t\t\t\t<div className=\"timer-value\">{remainingSeconds}</div>\r\n            </Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{[ 'won', 'lost' ].includes(gameStatus) && (\r\n            <Col xs={2} md={2} lg={2}>\r\n\t\t\t\t\t\t<button style={{width:80,transform:\"translateX(-11px)\"}} onClick={this.props.onPlayAgain}>Play Again</button>\r\n            </Col>\r\n\t\t\t\t\t)}\r\n          </Row>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport Game from './components/Game';\n\nclass App extends React.Component {\n\tstate = {\n\t\tgameId: 1\n\t};\n\n\tresetGame = () =>\n\t\tthis.setState((prevState) => ({\n\t\t\tgameId: prevState.gameId + 1\n\t\t}));\n\n\trender() {\n\t\treturn (\n\t\t\t<Game\n\t\t\t\tkey={this.state.gameId}\n\t\t\t\tautoPlay={this.state.gameId > 1}\n\t\t\t\tchallengeSize={6}\n\t\t\t\tchallengeRange={[ 2, 9 ]}\n\t\t\t\tinitialSeconds={10}\n\t\t\t\tonPlayAgain={this.resetGame}\n\t\t\t/>\n\t\t);\n\t}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('mountNode'));\n"],"sourceRoot":""}